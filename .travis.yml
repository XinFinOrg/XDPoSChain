sudo: required
language: go
go_import_path: github.com/XinFinOrg/XDPoSChain

on:
  branches:
    - master
    - dev-upgrade
  tags: true

env:
  global:
    - GOPROXY=https://proxy.golang.org
    - GO111MODULE=on
    # Terraform env
    - tf_version=1.3.0
    # Setting terraform init CLI options - https://www.terraform.io/docs/commands/init.html
    - tf_init_cli_options=" -input=false"
    # Set terraform validation CLI options - https://www.terraform.io/docs/commands/validate.html
    - tf_validation_cli_options=""
    # Set terraform plan CLI options - https://www.terraform.io/docs/commands/plan.html
    - tf_plan_cli_options=" -lock=false -input=false"
    # Set terraform apply CLI options - https://www.terraform.io/docs/commands/apply.html
    - tf_apply_cli_options=" -auto-approve -input=false"


jobs:
  include:
  - stage: (Devnet) Terraform apply
    if: branch = awsv2
    dist: xenial
    language: bash
    install:
        # Download and install terraform before each run
        - wget https://releases.hashicorp.com/terraform/"$tf_version"/terraform_"$tf_version"_linux_amd64.zip
        - unzip terraform_"$tf_version"_linux_amd64.zip
        - sudo mv terraform /usr/local/bin/
        - rm terraform_"$tf_version"_linux_amd64.zip
        - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        - unzip awscliv2.zip
        - sudo ./aws/install
        - export PATH=$PATH:$HOME/.local/bin # put aws in the path
    script:
      - echo "Merge detected, executing changes(Devnet)"
      - cd cicd/devnet/terraform
      # Terraform init and then apply changes to environment
      - terraform init $tf_init_cli_options
      - terraform apply $tf_apply_cli_options
      - sleep 5
      - |
        source .env
        for ((i=$us_east_2_start;i<$us_east_2_end;i++)); do
          echo "Force deploy xdc-$i"
          aws ecs update-service --region us-east-2 --cluster devnet-xdcnode-cluster --service ecs-service-xdc$i --force-new-deployment --no-cli-pager;
        done
        for ((i=$eu_west_1_start;i<$eu_west_1_end;i++)); do
          echo "Force deploy xdc-$i"
          aws ecs update-service --region eu-west-1 --cluster devnet-xdcnode-cluster --service ecs-service-xdc$i --force-new-deployment --no-cli-pager;
        done
        for ((i=$ap_southeast_2_start;i<$ap_southeast_2_end;i++)); do
          echo "Force deploy xdc-$i"
          aws ecs update-service --region ap-southeast-2 --cluster devnet-xdcnode-cluster --service ecs-service-xdc$i --force-new-deployment --no-cli-pager;
        done

